{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "defaultValue": "FindIT-OPCOMember-CU-DevOps123",
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "westeurope",
      "allowedValues": [
        "[resourceGroup().location]",
        "asia",
        "asiapacific",
        "australia",
        "australiacentral",
        "australiacentral2",
        "australiaeast",
        "australiasoutheast",
        "brazil",
        "brazilsouth",
        "brazilsoutheast",
        "canada",
        "canadacentral",
        "canadaeast",
        "centralindia",
        "centralus",
        "centraluseuap",
        "centralusstage",
        "chinaeast",
        "chinanorth",
        "eastasia",
        "eastasiastage",
        "eastus",
        "eastus2",
        "eastus2euap",
        "eastus2stage",
        "eastusstage",
        "europe",
        "francecentral",
        "francesouth",
        "germanycentral",
        "germanynorth",
        "germanynortheast",
        "germanywestcentral",
        "global",
        "india",
        "japan",
        "japaneast",
        "japanwest",
        "jioindiawest",
        "koreacentral",
        "koreasouth",
        "northcentralus",
        "northcentralusstage",
        "northeurope",
        "norwayeast",
        "norwaywest",
        "southafricanorth",
        "southafricawest",
        "southcentralus",
        "southcentralusstage",
        "southeastasia",
        "southeastasiastage",
        "southindia",
        "switzerland",
        "switzerlandnorth",
        "switzerlandwest",
        "uaecentral",
        "uaenorth",
        "uk",
        "uksouth",
        "ukwest",
        "unitedstates",
        "usdodeast",
        "usdodwest",
        "usgovarizona",
        "usgoviowa",
        "usgovtexas",
        "usgovvirginia",
        "usseceast",
        "ussecwest",
        "west",
        "westcentralus",
        "westeurope",
        "westindia",
        "westus",
        "westus2",
        "westus2stage",
        "westus3",
        "westusstage"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
	"When_an_item_is_created_or_modified_in_FindITFrequency": {
      "type": "string",
      "defaultValue": "Minute"
    },
    "FindIT-Member-Create-ResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "FindIT-Member-Create-FunctionApp": {
      "type": "string",
      "defaultValue": "DevHEIGISMOAL"
    },
    "FindIT-Member-Create-FunctionName": {
      "type": "string",
      "defaultValue": "FindIT-Member-Create"
    },
    "FindIT-Member-Update-ResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "FindIT-Member-Update-FunctionApp": {
      "type": "string",
      "defaultValue": "DevHEIGISMOAL"
    },
    "FindIT-Member-Update-FunctionName": {
      "type": "string",
      "defaultValue": "FindIT-Member-Update"
    },
    "Get_blob_content-path": {
      "type": "string",
      "defaultValue": "%2fhei-eud-prod-dataflow%2fStoreTermOpcos.json"
    },
    "__apostrophe": {
      "type": "string",
      "defaultValue": "'"
    },
    "Get_blob_content_2-path": {
      "type": "string",
      "defaultValue": "%2fhei-eud-test-data%2fTermStore_Products.json"
    },
    "paramSiteUrl": {
      "type": "string",
      "defaultValue": "https://heiway.sharepoint.com/sites/Collaborationportal"
    },
    "When_an_item_is_created_or_modified_in_FindITInterval": {
      "type": "int",
      "defaultValue": 1
    },
    "azureblob-3_name": {
      "type": "string",
      "defaultValue": "azureblob-3"
    },
    "azureblob-3_displayName": {
      "type": "string",
      "defaultValue": "storageaccountheicobc4f"
    },
    "azureblob-3_accountName": {
      "type": "string",
      "defaultValue": "storageaccountheicobc4f",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      }
    },
    "azureblob-3_resourceGroupName": {
      "type": "string",
      "defaultValue": "HEICollabTestRG01"
    },
    "sharepointonline-1_name": {
      "type": "string",
      "defaultValue": "sharepointonline-3"
    },
    "sharepointonline-1_displayName": {
      "type": "string",
      "defaultValue": "SHANMS02@heiway.net"
    },
    "sharepointonline-1_token:TenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "The tenant ID of for the Azure Active Directory application"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('logicAppLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azureblob-3_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('sharepointonline-1_name'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_an_item_is_created_or_modified_in_FindIT": {
              "recurrence": {
                "frequency": "[parameters('When_an_item_is_created_or_modified_in_FindITFrequency')]",
                "interval": "[parameters('When_an_item_is_created_or_modified_in_FindITInterval')]"
              },
              "splitOn": "@triggerBody()?['value']",
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                  }
                },
                "method": "get",
                "path": "#{[concat('/datasets/',uriComponent(uriComponent('parameters('paramSiteUrl')')),'/tables/',uriComponent(uriComponent('f80c17f0-ea36-48d2-84f4-34532e99dfd6')),'/onnewitems')]}#"
              }
            }
          },
          "actions": {
            "Checking_whether_new_item_or_edit_item": {
              "actions": {
                "Create_item": {
                  "runAfter": {
                    "Parse_JSON": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "DLErrorMessage": "@{body('Parse_JSON')['Error']}",
                      "DLRegionName": "@{body('Parse_JSON')['RegionGroup']}",
                      "DL_x0020_Automation_x0020_Messag": "@{body('Parse_JSON')['Action']}",
                      "DL_x0020_Group_x0020_Name": "@{body('Parse_JSON')['Given group']}",
                      "IsPrevSubProductParent": "@variables('IsProdParent')",
                      "ItemID": "@triggerBody()?['ID']",
                      "Item_x0020_Status": {
                        "Value": "New"
                      },
                      "Name": {
                        "Claims": "@triggerBody()?['Name']?['Claims']"
                      },
                      "OpCo": {
                        "Value": "@triggerBody()?['OpCo']?['Value']"
                      },
                      "Product": {
                        "Value": "ALL"
                      },
                      "Role": {
                        "Value": "Change manager"
                      },
                      "SubProduct": {
                        "Value": "@triggerBody()?['SubProduct']?['Value']"
                      }
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "#{[concat('/datasets/',uriComponent(uriComponent('parameters('paramSiteUrl')')),'/tables/',uriComponent(uriComponent('f80c17f0-ea36-48d2-84f4-34532e99dfd6')),'/onnewitems')]}#"
                  }
                },
                "FindIT-Member-Create": {
                  "runAfter": {},
                  "type": "Function",
                  "inputs": {
                    "body": {
                      "IsProdParent": "@variables('IsProdParent')",
                      "MemberName": "@triggerBody()?['Name']",
                      "OPCO": "@triggerBody()?['OpCo']?['Value']",
                      "OpcoRegion": "@variables('OpcoRegion')",
                      "Product": "@triggerBody()?['SubProduct']?['Value']"
                    },
                    "function": {
                      "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('FindIT-Member-Create-ResourceGroup'),'/providers/Microsoft.Web/sites/',parameters('FindIT-Member-Create-FunctionApp'),'/functions/',parameters('FindIT-Member-Create-FunctionName'))]"
                    }
                  }
                },
                "Parse_JSON": {
                  "runAfter": {
                    "FindIT-Member-Create": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('FindIT-Member-Create')",
                    "schema": {
                      "Action": "1 Update",
                      "Error": "No Error",
                      "Given group": "FINDIT-NSAM-AAD-Collaboration",
                      "IsParent": "1",
                      "NewValue": "{NSAM,Senthil.Kumar-S@heineken.com,Collaboration}",
                      "OldValue": "{NSAM,Senthil.Kumar-S@heineken.com,Collaboration}",
                      "RegionGroup": "FINDIT-0-AAD-Collaboration"
                    }
                  }
                }
              },
              "runAfter": {
                "IsProd_Parent": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "For_each": {
                    "foreach": "@body('Validate_Item_from_FindIT-Backend_List')?['value']",
                    "actions": {
                      "FindIT-Member-Update": {
                        "runAfter": {},
                        "type": "Function",
                        "inputs": {
                          "body": {
                            "IsPrevProdParent": "@items('For_each')?['IsPrevSubProductParent']",
                            "IsProdParent": "@variables('IsProdParent')",
                            "NewName": "@triggerBody()?['Name']",
                            "NewOPCO": "@triggerBody()?['OpCo']?['Value']",
                            "NewProd": "@triggerBody()?['SubProduct']?['Value']",
                            "OldName": "@items('For_each')?['Name']",
                            "OldOPCO": "@items('For_each')?['OpCo']?['Value']",
                            "OldProd": "@items('For_each')?['SubProduct']?['Value']",
                            "OpcoRegion": "@variables('OpcoRegion')"
                          },
                          "function": {
                            "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('FindIT-Member-Update-ResourceGroup'),'/providers/Microsoft.Web/sites/',parameters('FindIT-Member-Update-FunctionApp'),'/functions/',parameters('FindIT-Member-Update-FunctionName'))]"
                          }
                        }
                      },
                      "Parse_JSON_2": {
                        "runAfter": {
                          "FindIT-Member-Update": [
                            "Succeeded"
                          ]
                        },
                        "type": "ParseJson",
                        "inputs": {
                          "content": "@body('FindIT-Member-Update')",
                          "schema": {
                            "Action": "1 Update",
                            "Error": "No Error",
                            "Given group": "FINDIT-NSAM-AAD-Collaboration",
                            "IsParent": "1",
                            "NewValue": "{NSAM,Senthil.Kumar-S@heineken.com,Collaboration}",
                            "OldValue": "{NSAM,Senthil.Kumar-S@heineken.com,Collaboration}",
                            "RegionGroup": "FINDIT-0-AAD-Collaboration"
                          }
                        }
                      },
                      "Update_item": {
                        "runAfter": {
                          "Parse_JSON_2": [
                            "Succeeded"
                          ]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                          "body": {
                            "DLErrorMessage": "@{body('Parse_JSON_2')['Error']}",
                            "DLRegionName": "@{body('Parse_JSON_2')['RegionGroup']}",
                            "DL_x0020_Automation_x0020_Messag": "@{body('Parse_JSON_2')['Action']}@{body('Parse_JSON_2')['NewValue']}@{body('Parse_JSON_2')['OldValue']} ",
                            "DL_x0020_Group_x0020_Name": "@{body('Parse_JSON_2')['Given group']}",
                            "IsPrevSubProductParent": "@variables('IsProdParent')",
                            "Item_x0020_Status": {
                              "Value": "Updated"
                            },
                            "Name": {
                              "Claims": "@triggerBody()?['Name']?['Claims']"
                            },
                            "OpCo": {
                              "Value": "@triggerBody()?['OpCo']?['Value']"
                            },
                            "Product": {
                              "Value": "ALL"
                            },
                            "Role": {
                              "Value": "Change manager"
                            },
                            "SubProduct": {
                              "Value": "@triggerBody()?['SubProduct']?['Value']"
                            }
                          },
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                            }
                          },
                          "method": "patch",
                          "path": "#{[concat('/datasets/',uriComponent(uriComponent('parameters('paramSiteUrl')')),'/tables/',uriComponent(uriComponent('5abcb5f4-2544-4c0b-8b07-dfc5eb46e1c1')),'/items/',uriComponent(items('For_each')?['ID']))]}#"
                        }
                      }
                    },
                    "runAfter": {},
                    "type": "Foreach"
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@variables('Number of existing OPCO Members')",
                      0
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Compose": {
              "runAfter": {
                "Get_blob_content": [
                  "Succeeded"
                ]
              },
              "type": "Compose",
              "inputs": "@json(body('Get_blob_content'))"
            },
            "Compose_2": {
              "runAfter": {
                "Get_blob_content_2": [
                  "Succeeded"
                ]
              },
              "type": "Compose",
              "inputs": "@json(body('Get_blob_content_2'))"
            },
            "Condition": {
              "actions": {
                "Set_variable_2": {
                  "runAfter": {},
                  "type": "SetVariable",
                  "inputs": {
                    "name": "OpcoRegion",
                    "value": "@{body('Filter_array')[0]['Region']}"
                  }
                }
              },
              "runAfter": {
                "Initialize_variable_2": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "Set_variable_4": {
                    "runAfter": {},
                    "type": "SetVariable",
                    "inputs": {
                      "name": "OpcoRegion",
                      "value": "0"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "contains": [
                      "@variables('OpcoBody')",
                      "{"
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Declare_Variable_For_OpcoRegion": {
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "OpcoRegion",
                    "type": "string",
                    "value": "0"
                  }
                ]
              }
            },
            "Filter_array": {
              "runAfter": {
                "Compose": [
                  "Succeeded"
                ]
              },
              "type": "Query",
              "inputs": {
                "from": "@outputs('Compose')",
                "where": "@equals(item()?['Name'], triggerBody()?['OpCo']?['Label'])"
              }
            },
            "Filter_array_2": {
              "runAfter": {
                "Compose_2": [
                  "Succeeded"
                ]
              },
              "type": "Query",
              "inputs": {
                "from": "@outputs('Compose_2')",
                "where": "@equals(item()?['ParentName'], triggerBody()?['SubProduct']?['Label'])"
              }
            },
            "Get_blob_content": {
              "runAfter": {
                "Declare_Variable_For_OpcoRegion": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "[base64(parameters('Get_blob_content-path'))]": "[parameters('Get_blob_content-path')]"
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                  }
                },
                "method": "get",
                "path": "#{[concat('/v2/datasets/',uriComponent(uriComponent(parameters('Blob'))),'/files/',uriComponent(uriComponent(parameters('StorageAccountFileNames'))),'/content')]}#",						
				"queries": {
                  "inferContentType": false
                }
              }
            },
            "Get_blob_content_2": {
              "runAfter": {
                "Condition": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "[base64(parameters('Get_blob_content_2-path'))]": "[parameters('Get_blob_content_2-path')]"
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                  }
                },
                "method": "get",
                "path": "#{[concat('/v2/datasets/',uriComponent(uriComponent(parameters('Blob'))),'/files/',uriComponent(uriComponent(parameters('StorageAccountFileNames'))),'/content')]}#",
                "queries": {
                  "inferContentType": false
                }
              }
            },
            "Initialize_variable": {
              "runAfter": {
                "Validate_Item_from_FindIT-Backend_List": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Number of existing OPCO Members",
                    "type": "integer",
                    "value": "@length(body('Validate_Item_from_FindIT-Backend_List')?['value'])"
                  }
                ]
              }
            },
            "Initialize_variable_2": {
              "runAfter": {
                "Filter_array": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "OpcoBody",
                    "type": "string",
                    "value": "@{body('Filter_array')}"
                  }
                ]
              }
            },
            "IsProd_Parent": {
              "runAfter": {
                "Filter_array_2": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "IsProdParent",
                    "type": "integer",
                    "value": "@length(body('Filter_array_2'))"
                  }
                ]
              }
            },
            "Validate_Item_from_FindIT-Backend_List": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                  }
                },
                "method": "get",
                "path": "#{[concat('/datasets/',uriComponent(uriComponent('parameters('paramSiteUrl')')),'/tables/',uriComponent(uriComponent('5abcb5f4-2544-4c0b-8b07-dfc5eb46e1c1')),'/items/')]}#",
                "queries": {
                  "$filter": "ItemID eq '@{triggerBody()?['ID']}'",
                  "$top": 1
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob_1": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azureblob')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureblob-3_name'))]",
                "connectionName": "[parameters('azureblob-3_name')]"
              },
              "sharepointonline": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/sharepointonline')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sharepointonline-1_name'))]",
                "connectionName": "[parameters('sharepointonline-1_name')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('sharepointonline-1_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/sharepointonline')]"
        },
        "displayName": "[parameters('sharepointonline-1_displayName')]",
        "parameterValues": {
          "token:TenantId": "[parameters('sharepointonline-1_token:TenantId')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('azureblob-3_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azureblob')]"
        },
        "displayName": "[parameters('azureblob-3_displayName')]",
        "parameterValues": {
          "accountName": "[parameters('azureblob-3_accountName')]",
          "accessKey": "[listKeys(resourceId(parameters('azureblob-3_resourceGroupName'),'Microsoft.Storage/storageAccounts', parameters('azureblob-3_accountName')), '2018-02-01').keys[0].value]"
        }
      }
    }
  ],
  "outputs": {}
}
