{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "defaultValue": "FindIT-OPCOMember-CU-DevOps",
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "westeurope",
      "allowedValues": [
        "[resourceGroup().location]",
        "asia",
        "asiapacific",
        "australia",
        "australiacentral",
        "australiacentral2",
        "australiaeast",
        "australiasoutheast",
        "brazil",
        "brazilsouth",
        "brazilsoutheast",
        "canada",
        "canadacentral",
        "canadaeast",
        "centralindia",
        "centralus",
        "centraluseuap",
        "centralusstage",
        "chinaeast",
        "chinanorth",
        "eastasia",
        "eastasiastage",
        "eastus",
        "eastus2",
        "eastus2euap",
        "eastus2stage",
        "eastusstage",
        "europe",
        "francecentral",
        "francesouth",
        "germanycentral",
        "germanynorth",
        "germanynortheast",
        "germanywestcentral",
        "global",
        "india",
        "japan",
        "japaneast",
        "japanwest",
        "jioindiawest",
        "koreacentral",
        "koreasouth",
        "northcentralus",
        "northcentralusstage",
        "northeurope",
        "norwayeast",
        "norwaywest",
        "southafricanorth",
        "southafricawest",
        "southcentralus",
        "southcentralusstage",
        "southeastasia",
        "southeastasiastage",
        "southindia",
        "switzerland",
        "switzerlandnorth",
        "switzerlandwest",
        "uaecentral",
        "uaenorth",
        "uk",
        "uksouth",
        "ukwest",
        "unitedstates",
        "usdodeast",
        "usdodwest",
        "usgovarizona",
        "usgoviowa",
        "usgovtexas",
        "usgovvirginia",
        "usseceast",
        "ussecwest",
        "west",
        "westcentralus",
        "westeurope",
        "westindia",
        "westus",
        "westus2",
        "westus2stage",
        "westus3",
        "westusstage"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "Get_blob_content_(V2)-path": {
      "type": "string",
      "defaultValue": "%2fhei-eud-prod-dataflow%2fStoreTermOpcos.json"
    },
    "__apostrophe": {
      "type": "string",
      "defaultValue": "'"
    },
    "When_an_item_is_created_or_modified_in_FindITFrequency": {
      "type": "string",
      "defaultValue": "Minute"
    },
    "When_an_item_is_created_or_modified_in_FindITInterval": {
      "type": "int",
      "defaultValue": 1
    },
    "paramFindITBackUpListName": {
      "type": "string",
      "defaultValue": "FindIT-Backend"
    },
    "paramFindITListName": {
      "type": "string",
      "defaultValue": "FindIT"
    },
    "paramSiteUrl": {
      "type": "string",
      "defaultValue": "https://heiway.sharepoint.com/sites/Collaborationportal"
    },
    "paramStorageAccountFileNames": {
      "type": "string",
      "defaultValue": "/hei-eud-prod-dataflow/StoreTermOpcos.json"
    },
    "paramStorageAccountName": {
      "type": "string",
      "defaultValue": "heieudweustrprod01"
    },
    "azureblob-3_name": {
      "type": "string",
      "defaultValue": "azureblob-3"
    },
    "azureblob-3_displayName": {
      "type": "string",
      "defaultValue": "heieudweustrprod01"
    },
    "azureblob-3_accountName": {
      "type": "string",
      "defaultValue": "heieudweustrprod01",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      }
    },
    "azureblob-3_resourceGroupName": {
      "type": "string",
      "defaultValue": "HEICollabTestRG01"
    },
    "sharepointonline-1_name": {
      "type": "string",
      "defaultValue": "sharepointonline-1"
    },
    "sharepointonline-1_displayName": {
      "type": "string",
      "defaultValue": "SHANMS02@heiway.net"
    },
    "sharepointonline-1_token:TenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "The tenant ID of for the Azure Active Directory application"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "FindIT-OPCOMember-CU-DevOps",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azureblob-3_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('sharepointonline-1_name'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "FindITBackUpListName": {
              "defaultValue": "[parameters('paramFindITBackUpListName')]",
              "type": "String"
            },
            "FindITListName": {
              "defaultValue": "[parameters('paramFindITListName')]",
              "type": "String"
            },
            "SiteUrl": {
              "defaultValue": "[parameters('paramSiteUrl')]",
              "type": "String"
            },
            "StorageAccountFileNames": {
              "defaultValue": "[parameters('paramStorageAccountFileNames')]",
              "type": "String"
            },
            "StorageAccountName": {
              "defaultValue": "[parameters('paramStorageAccountName')]",
              "type": "String"
            }
          },
          "triggers": {
            "When_an_item_is_created_or_modified_in_FindIT": {
              "recurrence": {
                "frequency": "[parameters('When_an_item_is_created_or_modified_in_FindITFrequency')]",
                "interval": "[parameters('When_an_item_is_created_or_modified_in_FindITInterval')]"
              },
              "splitOn": "@triggerBody()?['value']",
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                  }
                },
                "method": "get",
                "path": "[parameters('path2')]"
              }
            }
          },
          "actions": {
            "Checking_whether_new_item_or_edit_item": {
              "actions": {},
              "runAfter": {
                "IsProd_Parent": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "For_each": {
                    "foreach": "@body('Validate_Item_from_FindIT-Backend_List')?['value']",
                    "actions": {},
                    "runAfter": {},
                    "type": "Foreach"
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@variables('Number of existing OPCO Members')",
                      0
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Condition": {
              "actions": {
                "Set_variable_2": {
                  "runAfter": {},
                  "type": "SetVariable",
                  "inputs": {
                    "name": "OpcoRegion",
                    "value": "888"
                  }
                }
              },
              "runAfter": {
                "Initialize_variable_2": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "Set_variable_4": {
                    "runAfter": {},
                    "type": "SetVariable",
                    "inputs": {
                      "name": "OpcoRegion",
                      "value": "0"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "contains": [
                      "@variables('OpcoBody')",
                      "{"
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Declare_Variable_For_OpcoRegion": {
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "OpcoRegion",
                    "type": "string",
                    "value": "0"
                  }
                ]
              }
            },
            "Get_blob_content_(V2)": {
              "runAfter": {
                "Declare_Variable_For_OpcoRegion": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "[base64(parameters('Get_blob_content_(V2)-path'))]": "[parameters('Get_blob_content_(V2)-path')]"
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "get",
                "path": "#{[concat('/v2/datasets/',uriComponent(uriComponent(parameters('Blob'))),'/files/',uriComponent(uriComponent(parameters('StorageAccountFileNames'))),'/content')]}#"
              }
            },
            "Initialize_variable": {
              "runAfter": {
                "Validate_Item_from_FindIT-Backend_List": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Number of existing OPCO Members",
                    "type": "integer",
                    "value": "@length(body('Validate_Item_from_FindIT-Backend_List')?['value'])"
                  }
                ]
              }
            },
            "Initialize_variable_2": {
              "runAfter": {
                "Get_blob_content_(V2)": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "OpcoBody",
                    "type": "string"
                  }
                ]
              }
            },
            "IsProd_Parent": {
              "runAfter": {
                "Condition": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "IsProdParent",
                    "type": "integer",
                    "value": 0
                  }
                ]
              }
            },
            "Validate_Item_from_FindIT-Backend_List": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('SiteUrl')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('FindITBackUpListName')))}/items",
                "queries": {
                  "$filter": "ItemID eq '@{triggerBody()?['ID']}'",
                  "$top": 1
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azureblob')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureblob-3_name'))]",
                "connectionName": "[parameters('azureblob-3_name')]"
              },
              "sharepointonline": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/sharepointonline')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sharepointonline-1_name'))]",
                "connectionName": "[parameters('sharepointonline-1_name')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "sharepointonline-1",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/sharepointonline')]"
        },
        "displayName": "[parameters('sharepointonline-1_displayName')]",
        "parameterValues": {
          "token:TenantId": "[parameters('sharepointonline-1_token:TenantId')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "azureblob-3",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azureblob')]"
        },
        "displayName": "[parameters('azureblob-3_displayName')]",
        "parameterValues": {
          "accountName": "[parameters('azureblob-3_accountName')]",
          "accessKey": "[listKeys(resourceId(parameters('azureblob-3_resourceGroupName'),'Microsoft.Storage/storageAccounts', parameters('azureblob-3_accountName')), '2018-02-01').keys[0].value]"
        }
      }
    }
  ],
  "outputs": {}
}
